<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ =BEGIN MIT LICENSE
  ~ 
  ~  Copyright (c) 2014 Author and Contributors
  ~ 
  ~  Permission is hereby granted, free of charge, to any person obtaining a copy
  ~  of this software and associated documentation files (the "Software"), to deal
  ~  in the Software without restriction, including without limitation the rights
  ~  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~  copies of the Software, and to permit persons to whom the Software is
  ~  furnished to do so, subject to the following conditions:
  ~ 
  ~  The above copyright notice and this permission notice shall be included in
  ~  all copies or substantial portions of the Software.
  ~ 
  ~  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  ~  THE SOFTWARE.
  ~ 
  ~ =END MIT LICENSE
-->
<project name="qr-zbar-ane" default="build">
    <!-- ################################################################### -->
    <!-- ########################## SETTINGS ############################### -->
    <!-- ################################################################### -->
    <property environment="env" />
    <condition property="isMac"><os family="mac" /></condition>
    <property name="FLEX_HOME" value="${env.AIR_HOME}" />
    <taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar"/>
    <!-- ################################################################### -->
    <!-- ########################## TARGETS ################################ -->
    <!-- ################################################################### -->
    <!-- Clean phase -->
    <target name="clean" description="Clean the build folders">
        <delete dir="output" includeEmptyDirs="true" failonerror="false"/>
        <delete dir="publish" includeEmptyDirs="true" failonerror="false"/>
        <delete dir="tester/output" includeEmptyDirs="true" failonerror="false"/>
        <delete dir="android/bin" includeEmptyDirs="true" failonerror="false"/>
    </target>
    <!-- Init phase -->
    <target name="init" depends="clean" description="Init the build folders">
        <mkdir dir="output" />
        <mkdir dir="publish" />
        <!--ANE-->  
        <copy todir="output">
          <fileset file="extension/extension.xml"/>
          <fileset file="extension/platformoptions.xml"/>
        </copy>  
        <!--Android-->        
        <copy todir="output/res">
          <fileset dir="android/res"/>
        </copy>
        <copy todir="output/libs">
            <fileset dir="android/libs"/>
        </copy>
        <!--iOS-->  
        <copy todir="output/Resources">
          <fileset dir="ios/QRZBar/ZBarSDK/Resources"/>
        </copy>    
    </target>
    <!-- XCODE phase -->
    <target name="xcode" if="isMac">
        <exec executable="/usr/bin/xcodebuild">
            <arg line="-project ios/QRZBar.xcodeproj" />
            <arg line="-scheme QRZBar" />
            <arg line="build" />
        </exec>
        <copy file="out/QRZBar.build/Objects-normal/armv7/libQRZBar.a" tofile="output/libQRZBar.a" failonerror="false" />
    </target>
    <!-- SWC phase -->
    <target name="swc">
        <ant antfile="extension/build.xml" useNativeBasedir="true" inheritAll="false" target="build" />
        <unzip src="output/ASLib.swc" dest="output"/>
    </target>
    <!-- JAR phase -->
    <target name="jar">
        <ant antfile="android/build.xml" useNativeBasedir="true" inheritAll="false" target="debug" /> 
        <copy file="android/bin/classes.jar" tofile="output/NativeAndroid.jar"/>
    </target>
    <!-- ANE phase -->
    <target name="ane">
        <java jar="${FLEX_HOME}/lib/adt.jar" fork="true" failonerror="true">
            <arg line="-package"/>
            <arg line="-target ane"/>
            <arg line="publish/qreader.ane"/>
            <arg line="output/extension.xml"/>
            <arg line="-swc output/ASLib.swc"/>
            <arg line="-platform Android-ARM"/>
            <arg line="-C output/ library.swf"/>
            <arg line="-C output/ NativeAndroid.jar"/>
            <arg line="-C output/ libs"/>
            <arg line="-C output/ res"/>
            <arg line="-platform iPhone-ARM"/>
            <arg line="-platformoptions output/platformoptions.xml"/>
            <arg line="-C output/ library.swf"/>
            <arg line="-C output/ libQRZBar.a"/>
            <arg line="-C output/Resources zbar-help.html"/>
            <arg line="-platform default"/>
            <arg line="-C output/ library.swf"/>
        </java>
    </target>
    <!-- Build phase -->
    <target name="build" depends="init,xcode,swc,jar,ane" description="Assemble Binaries">
        <!-- Assemble Example -->
        <ant antfile="tester/build.xml" useNativeBasedir="true" inheritAll="false" target="build" /> 
    </target>
    <!-- Export IDE phase -->
    <target name="export" description="Export IDEA sources">
        <zip destfile="${basedir}/ide.zip">
            <!-- IntelliJ IDEA -->
            <fileset dir="${basedir}" includes="**/.idea/**/*.*,**/*.ipr,**/*.iws,**/*.iml" />
            <!-- Eclipse -->
            <fileset dir="${basedir}" includes="**/.settings/**/*.*,**/*.cproject,**/*.project" />
        </zip>
    </target>
</project>